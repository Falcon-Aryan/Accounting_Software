openapi: 3.0.0
info:
  title: Users API
  version: 1.0.0
  description: API for managing users in the accounting system

components:
  schemas:
    User:
      type: object
      required:
        - email
        - password
        - name
      properties:
        user_id:
          type: string
          readOnly: true
        email:
          type: string
          format: email
        name:
          type: string
        phone:
          type: string
        company_name:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true

    Session:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string

paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - name
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                name:
                  type: string
                phone:
                  type: string
                company_name:
                  type: string
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
                  default_accounts_created:
                    type: integer
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string

  /login:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  session:
                    $ref: '#/components/schemas/Session'
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string

  /logout:
    post:
      summary: Logout user
      parameters:
        - name: X-Appwrite-Session-ID
          in: header
          required: true
          schema:
            type: string
        - name: X-Appwrite-User-ID
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Failed to logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string

  /create_default_accounts:
    post:
      summary: Create default accounts for users
      responses:
        '200':
          description: Default accounts created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: array
                    items:
                      type: string
                  skipped:
                    type: array
                    items:
                      type: string
                  failed:
                    type: array
                    items:
                      type: object
                      properties:
                        user_id:
                          type: string
                        error:
                          type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string

  /delete_user/{user_id}:
    delete:
      summary: Delete a user and all their data
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  results:
                    type: object
                    properties:
                      user_deleted:
                        type: boolean
                      user_document_deleted:
                        type: boolean
                      accounts_deleted:
                        type: integer
                      products_deleted:
                        type: integer
                      services_deleted:
                        type: integer
                      customers_deleted:
                        type: integer
                      estimates_deleted:
                        type: integer
                      invoices_deleted:
                        type: integer
                      transactions_deleted:
                        type: integer
                      errors:
                        type: array
                        items:
                          type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string